#!/usr/bin/env sh

##############################################################################
##
##  Gradle start up script for UN*X
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_NAME="Gradle"
APP_BASE_NAME=$(basename "$0")

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

# Make sure JAVA_HOME is set.
if [ -z "$JAVA_HOME" ]; then
  echo "ERROR: JAVA_HOME is not set!"
  exit 1
fi

# For Darwin, add options to specify how the application should appear in the dock
if [ "$(uname)" = "Darwin" ]; then
  DEFAULT_JVM_OPTS="$DEFAULT_JVM_OPTS -Xdock:name=$APP_NAME"
fi

# Increase the maximum file descriptors if we can.
if [ "$MAX_FD" != "maximum" ]; then
  ulimit -n "$MAX_FD" || echo "Could not set maximum file descriptor limit: $MAX_FD"
else
  ulimit -n unlimited || echo "Could not set unlimited file descriptor limit"
fi

# Collect all arguments for the java command, following the shell quoting and escaping rules.
# This is necessary to handle arguments with spaces and special characters correctly.
args=()
while [ $# -gt 0 ]; do
  case "$1" in
    --)
      shift
      break
      ;;
    *)
      args+=("$1")
      shift
      ;;
  esac
done

# Add the remaining arguments to the args array.
args+=("$@")

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ]; then
  if [ -x "$JAVA_HOME/jre/sh/java" ]; then
    JAVACMD="$JAVA_HOME/jre/sh/java"
  else
    JAVACMD="$JAVA_HOME/bin/java"
  fi
  if [ ! -x "$JAVACMD" ]; then
    echo "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME"
    echo "Please set the JAVA_HOME variable in your environment to match the location of your Java installation."
    exit 1
  fi
else
  JAVACMD="java"
  which java >/dev/null 2>&1 || {
    echo "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH."
    echo "Please set the JAVA_HOME variable in your environment to match the location of your Java installation."
    exit 1
  }
fi

# Execute the Java command with the collected arguments.
exec "$JAVACMD" "${DEFAULT_JVM_OPTS[@]}" "${args[@]}"
